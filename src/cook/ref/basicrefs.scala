package cook.ref

import cook.error.ErrorTracking._
import cook.path.Path

import scala.annotation.tailrec
import scala.tools.nsc.io.{ Path => SPath, Directory }


/**
 * Directory reference.
 *
 * segments is start from cook root.
 *
 * @author iamtimgreen@gmail.com (Tim Green)
 */
class DirRef(val segments: List[String]) extends Ref {

  def toDir: Directory = segments.foldLeft(Path().rootDir: SPath)(_ / _).toDirectory
  override def refName: String = segments.mkString("", "/", "/")
}

object DirRefFactory extends RefFactory[DirRef] {

  override def apply(baseSegments: List[String], refName: String): Option[DirRef] = {
    // TODO(timgreen):
    None
  }
}

abstract class PathRef(val dir: DirRef, lastPart: String) extends Ref

class FileRef(dir: DirRef, val filename: String) extends PathRef(dir, filename) {

  def toPath: SPath = dir.toDir / filename
  override def refName: String =  dir.refName + "/" + filename
}

object FileRefFactory extends RefFactory[FileRef] {

  override def apply(baseSegments: List[String], refName: String): Option[FileRef] = {
    // TODO(timgreen):
    None
  }
}

class TargetRef(dir: DirRef, val targetName: String) extends PathRef(dir, targetName) {

  override def refName: String =  dir.refName + ":" + targetName
  def cookFileRef: FileRef = new FileRef(dir, "COOK")
}

object TargetRefFactory extends RefFactory[TargetRef] {

  override def apply(baseSegments: List[String], refName: String): Option[TargetRef] = {
    // TODO(timgreen):
    None
  }
}

trait PluginRef extends Ref

trait PluginRefFactory[P <: PluginRef] extends RefFactory[P] {

  val pluginName: String

  override def apply(baseSegments: List[String], refName: String): Option[P] = {
    val prefix = "//" + pluginName + "/"
    if (refName.startsWith(prefix)) {
      parseRefName(refName.drop(prefix.size))
    } else {
      None
    }
  }

  def parseRefName(refName: String): Option[P]
}

// TODO(timgreen): Plugin Target ref
// Start with //<plugin_name>/
// e.g. //mvn/com.github.scopt%%scopt%2.1.0"
// can be generated by some helper function like:
// mvn / "com.github.scopt" %% "scopt" % "2.1.0"
