# base

scala_lib(
  name = "typed_actor_base",
  srcs = [
    "TypedActorBase.scala",
  ],
  deps = [
    "//src/cook/actor:config_loader",
    "//src/cook/actor:config_manager",
    "//src/cook/actor:config_ref_loader",
    "//src/cook/actor:config_ref_manager",
    "//src/cook/actor:config_ref_verifier",
    "//src/cook/actor:target_builder",
    "//src/cook/actor:target_manager",
    "//src/cook/app:global",
    "//lib/akka-actors.jar",
    "//lib/typesafe-config.jar",
  ]
)

# impl

scala_lib(
  name = "config_ref_loader_impl",
  srcs = "ConfigRefLoaderImpl.scala",
  deps = [
    ":typed_actor_base",
    "util:batch_responser",
    "util:task_builder",
    "//src/cook/app:global",
  ]
)

scala_lib(
  name = "config_ref_verifier_impl",
  srcs = "ConfigRefVerifierImpl.scala",
  deps = [
    ":typed_actor_base",
    "//src/cook/app:global",
  ]
)

scala_lib(
  name = "config_ref_manager_impl",
  srcs = "ConfigRefManagerImpl.scala",
  deps = [
    ":typed_actor_base",
    "util:batch_responser",
    "util:task_builder",
    "//src/cook/app:global",
  ]
)

scala_lib(
  name = "config_manager_impl",
  srcs = "ConfigManagerImpl.scala",
  deps = [
    ":typed_actor_base",
    "util:batch_responser",
    "//src/cook/app:global",
  ]
)

scala_lib(
  name = "config_loader_impl",
  srcs = "ConfigLoaderImpl.scala",
  deps = [
    ":typed_actor_base",
    "util:batch_responser",
    "util:task_builder",
    "//src/cook/app:global",
    "//src/cook/config:config_engine",
    "//src/cook/util:dag_solver",
  ]
)

scala_lib(
  name = "target_manager_impl",
  srcs = "TargetManagerImpl.scala",
  deps = [
    ":typed_actor_base",
    "util:batch_responser",
  ],
)

scala_lib(
  name = "target_builder_impl",
  srcs = "TargetBuilderImpl.scala",
  deps = [
    ":typed_actor_base",
    "util:batch_responser",
    "util:task_builder",
    "//src/cook/util:dag_solver",
  ],
)

scala_lib(
  name = "console_outputter_impl",
  srcs = "ConsoleOutputterImpl.scala",
  deps = [
    ":typed_actor_base",
    "//src/cook/actor:console_outputter",
  ],
)
