// This file contains the PEG grammar definition that
// Mouse uses to generate our parser.
//
// BuildConfig grammar

BuildConfig = Spacing Command* EOT {buildConfig} ;
Command = ( BuildRule ) Spacing {command} ;

BuildRule = RuleName LPAR ParamList RPAR {buildRule} ;

RuleName = Identifier {ruleName} ;

ParamList = Param ( COMMA Param )* COMMA? Spacing {&paramList} ;
Param = Key EQU Value {param} ;

Key = Identifier {key} ;
Value = ( StringValue / ListValue ) {value} ;
StringValue = StringLiteral Spacing {stringValue} ;
ListValue = LBRK StringValue ( COMMA StringValue )* COMMA? RBRK Spacing {listValue} ;

StringLiteral = ["] StringChar* ["] Spacing {stringLiteral} ;
StringChar = Escape / ![\"\n\\] _ ;
Escape = SimpleEscape ;
SimpleEscape = "\\" ['\"?\\abfnrtv] ;

Identifier = IdNondigit IdChar* Spacing {identifier} ;
IdNondigit = [a-z] / [A-Z] ;
IdChar = [a-z] / [A-Z] / [0-9] / [_] ;

//-------------------------------------------------------------------------
//  A.1.1  Lexical elements
//  Tokens are: Keyword, Identifier, Constant, StringLiteral, Punctuator.
//  Tokens are separated by Spacing.
//-------------------------------------------------------------------------

Spacing = ( WhiteSpace / LineComment )* ;

WhiteSpace  = [ \n\r\t\u000B\u000C] ;

LineComment = "#" (!"\n" _)* ;

//-------------------------------------------------------------------------
LBRK       =  "["         Spacing ;
RBRK       =  "]"         Spacing ;
LPAR       =  "("         Spacing ;
RPAR       =  ")"         Spacing ;

EQU        =  "="  !"="   Spacing ;
COMMA      =  ","         Spacing ;



//-------------------------------------------------------------------------
EOT        =  !_    ;
